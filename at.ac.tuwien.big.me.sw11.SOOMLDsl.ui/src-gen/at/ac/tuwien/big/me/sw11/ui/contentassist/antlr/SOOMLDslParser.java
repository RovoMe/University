/*
* generated by Xtext
*/
package at.ac.tuwien.big.me.sw11.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import at.ac.tuwien.big.me.sw11.services.SOOMLDslGrammarAccess;

public class SOOMLDslParser extends AbstractContentAssistParser {
	
	@Inject
	private SOOMLDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected at.ac.tuwien.big.me.sw11.ui.contentassist.antlr.internal.InternalSOOMLDslParser createParser() {
		at.ac.tuwien.big.me.sw11.ui.contentassist.antlr.internal.InternalSOOMLDslParser result = new at.ac.tuwien.big.me.sw11.ui.contentassist.antlr.internal.InternalSOOMLDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getStructFeatAccess().getAlternatives(), "rule__StructFeat__Alternatives");
					put(grammarAccess.getGuadAccess().getAlternatives(), "rule__Guad__Alternatives");
					put(grammarAccess.getActAccess().getAlternatives(), "rule__Act__Alternatives");
					put(grammarAccess.getParamBindAccess().getAlternatives_2(), "rule__ParamBind__Alternatives_2");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getDTypeAccess().getAlternatives(), "rule__DType__Alternatives");
					put(grammarAccess.getPkgAccess().getGroup(), "rule__Pkg__Group__0");
					put(grammarAccess.getPkgAccess().getGroup_3(), "rule__Pkg__Group_3__0");
					put(grammarAccess.getPkgAccess().getGroup_4(), "rule__Pkg__Group_4__0");
					put(grammarAccess.getClsAccess().getGroup(), "rule__Cls__Group__0");
					put(grammarAccess.getClsAccess().getGroup_3(), "rule__Cls__Group_3__0");
					put(grammarAccess.getClsAccess().getGroup_4(), "rule__Cls__Group_4__0");
					put(grammarAccess.getAttrAccess().getGroup(), "rule__Attr__Group__0");
					put(grammarAccess.getAttrAccess().getGroup_3(), "rule__Attr__Group_3__0");
					put(grammarAccess.getRefAccess().getGroup(), "rule__Ref__Group__0");
					put(grammarAccess.getRefAccess().getGroup_8(), "rule__Ref__Group_8__0");
					put(grammarAccess.getOpAccess().getGroup(), "rule__Op__Group__0");
					put(grammarAccess.getOpAccess().getGroup_3(), "rule__Op__Group_3__0");
					put(grammarAccess.getOpAccess().getGroup_3_1(), "rule__Op__Group_3_1__0");
					put(grammarAccess.getParamAccess().getGroup(), "rule__Param__Group__0");
					put(grammarAccess.getStMachAccess().getGroup(), "rule__StMach__Group__0");
					put(grammarAccess.getSteAccess().getGroup(), "rule__Ste__Group__0");
					put(grammarAccess.getSteAccess().getGroup_2(), "rule__Ste__Group_2__0");
					put(grammarAccess.getSteAccess().getGroup_4(), "rule__Ste__Group_4__0");
					put(grammarAccess.getTransAccess().getGroup(), "rule__Trans__Group__0");
					put(grammarAccess.getTransAccess().getGroup_3(), "rule__Trans__Group_3__0");
					put(grammarAccess.getTransAccess().getGroup_4(), "rule__Trans__Group_4__0");
					put(grammarAccess.getCRefOpActAccess().getGroup(), "rule__CRefOpAct__Group__0");
					put(grammarAccess.getCRefOpActAccess().getGroup_5(), "rule__CRefOpAct__Group_5__0");
					put(grammarAccess.getCRefOpActAccess().getGroup_5_2(), "rule__CRefOpAct__Group_5_2__0");
					put(grammarAccess.getCParamOpActAccess().getGroup(), "rule__CParamOpAct__Group__0");
					put(grammarAccess.getCParamOpActAccess().getGroup_3(), "rule__CParamOpAct__Group_3__0");
					put(grammarAccess.getCParamOpActAccess().getGroup_3_2(), "rule__CParamOpAct__Group_3_2__0");
					put(grammarAccess.getRefAssActAccess().getGroup(), "rule__RefAssAct__Group__0");
					put(grammarAccess.getParamBindAccess().getGroup(), "rule__ParamBind__Group__0");
					put(grammarAccess.getRefInStateCondAccess().getGroup(), "rule__RefInStateCond__Group__0");
					put(grammarAccess.getParamInStateCondAccess().getGroup(), "rule__ParamInStateCond__Group__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getPkgAccess().getNameAssignment_1(), "rule__Pkg__NameAssignment_1");
					put(grammarAccess.getPkgAccess().getClassesAssignment_3_0(), "rule__Pkg__ClassesAssignment_3_0");
					put(grammarAccess.getPkgAccess().getClassesAssignment_3_1(), "rule__Pkg__ClassesAssignment_3_1");
					put(grammarAccess.getPkgAccess().getPackagesAssignment_4_0(), "rule__Pkg__PackagesAssignment_4_0");
					put(grammarAccess.getPkgAccess().getPackagesAssignment_4_1(), "rule__Pkg__PackagesAssignment_4_1");
					put(grammarAccess.getClsAccess().getNameAssignment_1(), "rule__Cls__NameAssignment_1");
					put(grammarAccess.getClsAccess().getFeaturesAssignment_3_0(), "rule__Cls__FeaturesAssignment_3_0");
					put(grammarAccess.getClsAccess().getFeaturesAssignment_3_1(), "rule__Cls__FeaturesAssignment_3_1");
					put(grammarAccess.getClsAccess().getOperationsAssignment_4_0(), "rule__Cls__OperationsAssignment_4_0");
					put(grammarAccess.getClsAccess().getOperationsAssignment_4_1(), "rule__Cls__OperationsAssignment_4_1");
					put(grammarAccess.getClsAccess().getStateMachineAssignment_5(), "rule__Cls__StateMachineAssignment_5");
					put(grammarAccess.getAttrAccess().getDataTypeAssignment_1(), "rule__Attr__DataTypeAssignment_1");
					put(grammarAccess.getAttrAccess().getNameAssignment_2(), "rule__Attr__NameAssignment_2");
					put(grammarAccess.getAttrAccess().getLowerBoundAssignment_3_1(), "rule__Attr__LowerBoundAssignment_3_1");
					put(grammarAccess.getAttrAccess().getUpperBoundAssignment_3_3(), "rule__Attr__UpperBoundAssignment_3_3");
					put(grammarAccess.getRefAccess().getTypeAssignment_1(), "rule__Ref__TypeAssignment_1");
					put(grammarAccess.getRefAccess().getNameAssignment_2(), "rule__Ref__NameAssignment_2");
					put(grammarAccess.getRefAccess().getLowerBoundAssignment_4(), "rule__Ref__LowerBoundAssignment_4");
					put(grammarAccess.getRefAccess().getUpperBoundAssignment_6(), "rule__Ref__UpperBoundAssignment_6");
					put(grammarAccess.getRefAccess().getOppositeAssignment_8_1(), "rule__Ref__OppositeAssignment_8_1");
					put(grammarAccess.getOpAccess().getNameAssignment_1(), "rule__Op__NameAssignment_1");
					put(grammarAccess.getOpAccess().getParameterAssignment_3_0(), "rule__Op__ParameterAssignment_3_0");
					put(grammarAccess.getOpAccess().getParameterAssignment_3_1_1(), "rule__Op__ParameterAssignment_3_1_1");
					put(grammarAccess.getParamAccess().getDataTypeAssignment_0(), "rule__Param__DataTypeAssignment_0");
					put(grammarAccess.getParamAccess().getClassTypeAssignment_1(), "rule__Param__ClassTypeAssignment_1");
					put(grammarAccess.getParamAccess().getNameAssignment_2(), "rule__Param__NameAssignment_2");
					put(grammarAccess.getStMachAccess().getStatesAssignment_2(), "rule__StMach__StatesAssignment_2");
					put(grammarAccess.getStMachAccess().getStatesAssignment_3(), "rule__StMach__StatesAssignment_3");
					put(grammarAccess.getStMachAccess().getInitialStateAssignment_5(), "rule__StMach__InitialStateAssignment_5");
					put(grammarAccess.getSteAccess().getNameAssignment_1(), "rule__Ste__NameAssignment_1");
					put(grammarAccess.getSteAccess().getEntryOperationAssignment_2_1(), "rule__Ste__EntryOperationAssignment_2_1");
					put(grammarAccess.getSteAccess().getTransitionsAssignment_4_0(), "rule__Ste__TransitionsAssignment_4_0");
					put(grammarAccess.getSteAccess().getTransitionsAssignment_4_1(), "rule__Ste__TransitionsAssignment_4_1");
					put(grammarAccess.getEntOpAccess().getCalledOperationAssignment(), "rule__EntOp__CalledOperationAssignment");
					put(grammarAccess.getTransAccess().getEventAssignment_0(), "rule__Trans__EventAssignment_0");
					put(grammarAccess.getTransAccess().getTargetAssignment_2(), "rule__Trans__TargetAssignment_2");
					put(grammarAccess.getTransAccess().getGuardAssignment_3_1(), "rule__Trans__GuardAssignment_3_1");
					put(grammarAccess.getTransAccess().getActionsAssignment_4_1(), "rule__Trans__ActionsAssignment_4_1");
					put(grammarAccess.getTransAccess().getActionsAssignment_4_2(), "rule__Trans__ActionsAssignment_4_2");
					put(grammarAccess.getEvAccess().getOperationAssignment(), "rule__Ev__OperationAssignment");
					put(grammarAccess.getCRefOpActAccess().getCallObjectViaReferenceAssignment_2(), "rule__CRefOpAct__CallObjectViaReferenceAssignment_2");
					put(grammarAccess.getCRefOpActAccess().getCalledOperationAssignment_4(), "rule__CRefOpAct__CalledOperationAssignment_4");
					put(grammarAccess.getCRefOpActAccess().getParameterAssignment_5_1(), "rule__CRefOpAct__ParameterAssignment_5_1");
					put(grammarAccess.getCRefOpActAccess().getParameterAssignment_5_2_1(), "rule__CRefOpAct__ParameterAssignment_5_2_1");
					put(grammarAccess.getCParamOpActAccess().getCallObjectViaParameterAssignment_0(), "rule__CParamOpAct__CallObjectViaParameterAssignment_0");
					put(grammarAccess.getCParamOpActAccess().getCalledOperationAssignment_2(), "rule__CParamOpAct__CalledOperationAssignment_2");
					put(grammarAccess.getCParamOpActAccess().getParameterAssignment_3_1(), "rule__CParamOpAct__ParameterAssignment_3_1");
					put(grammarAccess.getCParamOpActAccess().getParameterAssignment_3_2_1(), "rule__CParamOpAct__ParameterAssignment_3_2_1");
					put(grammarAccess.getRefAssActAccess().getReferenceAssignment_2(), "rule__RefAssAct__ReferenceAssignment_2");
					put(grammarAccess.getRefAssActAccess().getParameterAssignment_4(), "rule__RefAssAct__ParameterAssignment_4");
					put(grammarAccess.getParamBindAccess().getParameterBindingAssignment_0(), "rule__ParamBind__ParameterBindingAssignment_0");
					put(grammarAccess.getParamBindAccess().getStructuralFeatureBindingAssignment_2_0(), "rule__ParamBind__StructuralFeatureBindingAssignment_2_0");
					put(grammarAccess.getRefInStateCondAccess().getReferenceAssignment_2(), "rule__RefInStateCond__ReferenceAssignment_2");
					put(grammarAccess.getRefInStateCondAccess().getInStateAssignment_4(), "rule__RefInStateCond__InStateAssignment_4");
					put(grammarAccess.getParamInStateCondAccess().getParameterAssignment_0(), "rule__ParamInStateCond__ParameterAssignment_0");
					put(grammarAccess.getParamInStateCondAccess().getInStateAssignment_2(), "rule__ParamInStateCond__InStateAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			at.ac.tuwien.big.me.sw11.ui.contentassist.antlr.internal.InternalSOOMLDslParser typedParser = (at.ac.tuwien.big.me.sw11.ui.contentassist.antlr.internal.InternalSOOMLDslParser) parser;
			typedParser.entryRulePkg();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public SOOMLDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(SOOMLDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
