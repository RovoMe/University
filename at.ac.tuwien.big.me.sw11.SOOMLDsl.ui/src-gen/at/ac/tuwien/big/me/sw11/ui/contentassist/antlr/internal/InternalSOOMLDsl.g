/*
* generated by Xtext
*/
grammar InternalSOOMLDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package at.ac.tuwien.big.me.sw11.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.ac.tuwien.big.me.sw11.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import at.ac.tuwien.big.me.sw11.services.SOOMLDslGrammarAccess;

}

@parser::members {
 
 	private SOOMLDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SOOMLDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulePkg
entryRulePkg 
:
{ before(grammarAccess.getPkgRule()); }
	 rulePkg
{ after(grammarAccess.getPkgRule()); } 
	 EOF 
;

// Rule Pkg
rulePkg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPkgAccess().getGroup()); }
(rule__Pkg__Group__0)
{ after(grammarAccess.getPkgAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCls
entryRuleCls 
:
{ before(grammarAccess.getClsRule()); }
	 ruleCls
{ after(grammarAccess.getClsRule()); } 
	 EOF 
;

// Rule Cls
ruleCls
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClsAccess().getGroup()); }
(rule__Cls__Group__0)
{ after(grammarAccess.getClsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructFeat
entryRuleStructFeat 
:
{ before(grammarAccess.getStructFeatRule()); }
	 ruleStructFeat
{ after(grammarAccess.getStructFeatRule()); } 
	 EOF 
;

// Rule StructFeat
ruleStructFeat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructFeatAccess().getAlternatives()); }
(rule__StructFeat__Alternatives)
{ after(grammarAccess.getStructFeatAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttr
entryRuleAttr 
:
{ before(grammarAccess.getAttrRule()); }
	 ruleAttr
{ after(grammarAccess.getAttrRule()); } 
	 EOF 
;

// Rule Attr
ruleAttr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttrAccess().getGroup()); }
(rule__Attr__Group__0)
{ after(grammarAccess.getAttrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRef
entryRuleRef 
:
{ before(grammarAccess.getRefRule()); }
	 ruleRef
{ after(grammarAccess.getRefRule()); } 
	 EOF 
;

// Rule Ref
ruleRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRefAccess().getGroup()); }
(rule__Ref__Group__0)
{ after(grammarAccess.getRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOp
entryRuleOp 
:
{ before(grammarAccess.getOpRule()); }
	 ruleOp
{ after(grammarAccess.getOpRule()); } 
	 EOF 
;

// Rule Op
ruleOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpAccess().getGroup()); }
(rule__Op__Group__0)
{ after(grammarAccess.getOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParam
entryRuleParam 
:
{ before(grammarAccess.getParamRule()); }
	 ruleParam
{ after(grammarAccess.getParamRule()); } 
	 EOF 
;

// Rule Param
ruleParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamAccess().getGroup()); }
(rule__Param__Group__0)
{ after(grammarAccess.getParamAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStMach
entryRuleStMach 
:
{ before(grammarAccess.getStMachRule()); }
	 ruleStMach
{ after(grammarAccess.getStMachRule()); } 
	 EOF 
;

// Rule StMach
ruleStMach
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStMachAccess().getGroup()); }
(rule__StMach__Group__0)
{ after(grammarAccess.getStMachAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSte
entryRuleSte 
:
{ before(grammarAccess.getSteRule()); }
	 ruleSte
{ after(grammarAccess.getSteRule()); } 
	 EOF 
;

// Rule Ste
ruleSte
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSteAccess().getGroup()); }
(rule__Ste__Group__0)
{ after(grammarAccess.getSteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntOp
entryRuleEntOp 
:
{ before(grammarAccess.getEntOpRule()); }
	 ruleEntOp
{ after(grammarAccess.getEntOpRule()); } 
	 EOF 
;

// Rule EntOp
ruleEntOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntOpAccess().getCalledOperationAssignment()); }
(rule__EntOp__CalledOperationAssignment)
{ after(grammarAccess.getEntOpAccess().getCalledOperationAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrans
entryRuleTrans 
:
{ before(grammarAccess.getTransRule()); }
	 ruleTrans
{ after(grammarAccess.getTransRule()); } 
	 EOF 
;

// Rule Trans
ruleTrans
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransAccess().getGroup()); }
(rule__Trans__Group__0)
{ after(grammarAccess.getTransAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEv
entryRuleEv 
:
{ before(grammarAccess.getEvRule()); }
	 ruleEv
{ after(grammarAccess.getEvRule()); } 
	 EOF 
;

// Rule Ev
ruleEv
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEvAccess().getOperationAssignment()); }
(rule__Ev__OperationAssignment)
{ after(grammarAccess.getEvAccess().getOperationAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGuad
entryRuleGuad 
:
{ before(grammarAccess.getGuadRule()); }
	 ruleGuad
{ after(grammarAccess.getGuadRule()); } 
	 EOF 
;

// Rule Guad
ruleGuad
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGuadAccess().getAlternatives()); }
(rule__Guad__Alternatives)
{ after(grammarAccess.getGuadAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAct
entryRuleAct 
:
{ before(grammarAccess.getActRule()); }
	 ruleAct
{ after(grammarAccess.getActRule()); } 
	 EOF 
;

// Rule Act
ruleAct
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActAccess().getAlternatives()); }
(rule__Act__Alternatives)
{ after(grammarAccess.getActAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecRefOpAct
entryRulecRefOpAct 
:
{ before(grammarAccess.getCRefOpActRule()); }
	 rulecRefOpAct
{ after(grammarAccess.getCRefOpActRule()); } 
	 EOF 
;

// Rule cRefOpAct
rulecRefOpAct
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCRefOpActAccess().getGroup()); }
(rule__CRefOpAct__Group__0)
{ after(grammarAccess.getCRefOpActAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecParamOpAct
entryRulecParamOpAct 
:
{ before(grammarAccess.getCParamOpActRule()); }
	 rulecParamOpAct
{ after(grammarAccess.getCParamOpActRule()); } 
	 EOF 
;

// Rule cParamOpAct
rulecParamOpAct
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCParamOpActAccess().getGroup()); }
(rule__CParamOpAct__Group__0)
{ after(grammarAccess.getCParamOpActAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerefAssAct
entryRulerefAssAct 
:
{ before(grammarAccess.getRefAssActRule()); }
	 rulerefAssAct
{ after(grammarAccess.getRefAssActRule()); } 
	 EOF 
;

// Rule refAssAct
rulerefAssAct
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRefAssActAccess().getGroup()); }
(rule__RefAssAct__Group__0)
{ after(grammarAccess.getRefAssActAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParamBind
entryRuleParamBind 
:
{ before(grammarAccess.getParamBindRule()); }
	 ruleParamBind
{ after(grammarAccess.getParamBindRule()); } 
	 EOF 
;

// Rule ParamBind
ruleParamBind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamBindAccess().getGroup()); }
(rule__ParamBind__Group__0)
{ after(grammarAccess.getParamBindAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerefInStateCond
entryRulerefInStateCond 
:
{ before(grammarAccess.getRefInStateCondRule()); }
	 rulerefInStateCond
{ after(grammarAccess.getRefInStateCondRule()); } 
	 EOF 
;

// Rule refInStateCond
rulerefInStateCond
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRefInStateCondAccess().getGroup()); }
(rule__RefInStateCond__Group__0)
{ after(grammarAccess.getRefInStateCondAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleparamInStateCond
entryRuleparamInStateCond 
:
{ before(grammarAccess.getParamInStateCondRule()); }
	 ruleparamInStateCond
{ after(grammarAccess.getParamInStateCondRule()); } 
	 EOF 
;

// Rule paramInStateCond
ruleparamInStateCond
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamInStateCondAccess().getGroup()); }
(rule__ParamInStateCond__Group__0)
{ after(grammarAccess.getParamInStateCondAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEInt
entryRuleEInt 
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEIntAccess().getGroup()); }
(rule__EInt__Group__0)
{ after(grammarAccess.getEIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule dType
ruledType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTypeAccess().getAlternatives()); }
(rule__DType__Alternatives)
{ after(grammarAccess.getDTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__StructFeat__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructFeatAccess().getAttrParserRuleCall_0()); }
	ruleAttr
{ after(grammarAccess.getStructFeatAccess().getAttrParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStructFeatAccess().getRefParserRuleCall_1()); }
	ruleRef
{ after(grammarAccess.getStructFeatAccess().getRefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Guad__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuadAccess().getRefInStateCondParserRuleCall_0()); }
	rulerefInStateCond
{ after(grammarAccess.getGuadAccess().getRefInStateCondParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGuadAccess().getParamInStateCondParserRuleCall_1()); }
	ruleparamInStateCond
{ after(grammarAccess.getGuadAccess().getParamInStateCondParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Act__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActAccess().getCRefOpActParserRuleCall_0()); }
	rulecRefOpAct
{ after(grammarAccess.getActAccess().getCRefOpActParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getActAccess().getCParamOpActParserRuleCall_1()); }
	rulecParamOpAct
{ after(grammarAccess.getActAccess().getCParamOpActParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getActAccess().getRefAssActParserRuleCall_2()); }
	rulerefAssAct
{ after(grammarAccess.getActAccess().getRefAssActParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamBind__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamBindAccess().getStructuralFeatureBindingAssignment_2_0()); }
(rule__ParamBind__StructuralFeatureBindingAssignment_2_0)
{ after(grammarAccess.getParamBindAccess().getStructuralFeatureBindingAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getParamBindAccess().getSelfKeyword_2_1()); }

	'self' 

{ after(grammarAccess.getParamBindAccess().getSelfKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTypeAccess().getStringEnumLiteralDeclaration_0()); }
(	'String' 
)
{ after(grammarAccess.getDTypeAccess().getStringEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getDTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
(	'Integer' 
)
{ after(grammarAccess.getDTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getDTypeAccess().getBooleanEnumLiteralDeclaration_2()); }
(	'Boolean' 
)
{ after(grammarAccess.getDTypeAccess().getBooleanEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getDTypeAccess().getComplexEnumLiteralDeclaration_3()); }
(	'Complex Class' 
)
{ after(grammarAccess.getDTypeAccess().getComplexEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Pkg__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pkg__Group__0__Impl
	rule__Pkg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pkg__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPkgAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPkgAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pkg__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pkg__Group__1__Impl
	rule__Pkg__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pkg__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPkgAccess().getNameAssignment_1()); }
(rule__Pkg__NameAssignment_1)
{ after(grammarAccess.getPkgAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pkg__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pkg__Group__2__Impl
	rule__Pkg__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pkg__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPkgAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPkgAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pkg__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pkg__Group__3__Impl
	rule__Pkg__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pkg__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPkgAccess().getGroup_3()); }
(rule__Pkg__Group_3__0)?
{ after(grammarAccess.getPkgAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pkg__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pkg__Group__4__Impl
	rule__Pkg__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Pkg__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPkgAccess().getGroup_4()); }
(rule__Pkg__Group_4__0)?
{ after(grammarAccess.getPkgAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pkg__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pkg__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pkg__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPkgAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getPkgAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Pkg__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pkg__Group_3__0__Impl
	rule__Pkg__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pkg__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPkgAccess().getClassesAssignment_3_0()); }
(rule__Pkg__ClassesAssignment_3_0)
{ after(grammarAccess.getPkgAccess().getClassesAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pkg__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pkg__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pkg__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPkgAccess().getClassesAssignment_3_1()); }
(rule__Pkg__ClassesAssignment_3_1)*
{ after(grammarAccess.getPkgAccess().getClassesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pkg__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pkg__Group_4__0__Impl
	rule__Pkg__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pkg__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPkgAccess().getPackagesAssignment_4_0()); }
(rule__Pkg__PackagesAssignment_4_0)
{ after(grammarAccess.getPkgAccess().getPackagesAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pkg__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pkg__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pkg__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPkgAccess().getPackagesAssignment_4_1()); }
(rule__Pkg__PackagesAssignment_4_1)*
{ after(grammarAccess.getPkgAccess().getPackagesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Cls__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cls__Group__0__Impl
	rule__Cls__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getClassKeyword_0()); }

	'class' 

{ after(grammarAccess.getClsAccess().getClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cls__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cls__Group__1__Impl
	rule__Cls__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getNameAssignment_1()); }
(rule__Cls__NameAssignment_1)
{ after(grammarAccess.getClsAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cls__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cls__Group__2__Impl
	rule__Cls__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getClsAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cls__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cls__Group__3__Impl
	rule__Cls__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getGroup_3()); }
(rule__Cls__Group_3__0)?
{ after(grammarAccess.getClsAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cls__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cls__Group__4__Impl
	rule__Cls__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getGroup_4()); }
(rule__Cls__Group_4__0)?
{ after(grammarAccess.getClsAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cls__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cls__Group__5__Impl
	rule__Cls__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getStateMachineAssignment_5()); }
(rule__Cls__StateMachineAssignment_5)
{ after(grammarAccess.getClsAccess().getStateMachineAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cls__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cls__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getClsAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Cls__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cls__Group_3__0__Impl
	rule__Cls__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getFeaturesAssignment_3_0()); }
(rule__Cls__FeaturesAssignment_3_0)
{ after(grammarAccess.getClsAccess().getFeaturesAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cls__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cls__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getFeaturesAssignment_3_1()); }
(rule__Cls__FeaturesAssignment_3_1)*
{ after(grammarAccess.getClsAccess().getFeaturesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Cls__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cls__Group_4__0__Impl
	rule__Cls__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getOperationsAssignment_4_0()); }
(rule__Cls__OperationsAssignment_4_0)
{ after(grammarAccess.getClsAccess().getOperationsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cls__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cls__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getOperationsAssignment_4_1()); }
(rule__Cls__OperationsAssignment_4_1)*
{ after(grammarAccess.getClsAccess().getOperationsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group__0__Impl
	rule__Attr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getAttKeyword_0()); }

	'att' 

{ after(grammarAccess.getAttrAccess().getAttKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group__1__Impl
	rule__Attr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getDataTypeAssignment_1()); }
(rule__Attr__DataTypeAssignment_1)
{ after(grammarAccess.getAttrAccess().getDataTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group__2__Impl
	rule__Attr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getNameAssignment_2()); }
(rule__Attr__NameAssignment_2)
{ after(grammarAccess.getAttrAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getGroup_3()); }
(rule__Attr__Group_3__0)?
{ after(grammarAccess.getAttrAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Attr__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group_3__0__Impl
	rule__Attr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getAttrAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group_3__1__Impl
	rule__Attr__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getLowerBoundAssignment_3_1()); }
(rule__Attr__LowerBoundAssignment_3_1)
{ after(grammarAccess.getAttrAccess().getLowerBoundAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group_3__2__Impl
	rule__Attr__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getFullStopFullStopKeyword_3_2()); }

	'..' 

{ after(grammarAccess.getAttrAccess().getFullStopFullStopKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group_3__3__Impl
	rule__Attr__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getUpperBoundAssignment_3_3()); }
(rule__Attr__UpperBoundAssignment_3_3)
{ after(grammarAccess.getAttrAccess().getUpperBoundAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getRightParenthesisKeyword_3_4()); }

	')' 

{ after(grammarAccess.getAttrAccess().getRightParenthesisKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Ref__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ref__Group__0__Impl
	rule__Ref__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getRefKeyword_0()); }

	'ref' 

{ after(grammarAccess.getRefAccess().getRefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ref__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ref__Group__1__Impl
	rule__Ref__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getTypeAssignment_1()); }
(rule__Ref__TypeAssignment_1)
{ after(grammarAccess.getRefAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ref__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ref__Group__2__Impl
	rule__Ref__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getNameAssignment_2()); }
(rule__Ref__NameAssignment_2)
{ after(grammarAccess.getRefAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ref__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ref__Group__3__Impl
	rule__Ref__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getRefAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ref__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ref__Group__4__Impl
	rule__Ref__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getLowerBoundAssignment_4()); }
(rule__Ref__LowerBoundAssignment_4)
{ after(grammarAccess.getRefAccess().getLowerBoundAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ref__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ref__Group__5__Impl
	rule__Ref__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getFullStopFullStopKeyword_5()); }

	'..' 

{ after(grammarAccess.getRefAccess().getFullStopFullStopKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ref__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ref__Group__6__Impl
	rule__Ref__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getUpperBoundAssignment_6()); }
(rule__Ref__UpperBoundAssignment_6)
{ after(grammarAccess.getRefAccess().getUpperBoundAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ref__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ref__Group__7__Impl
	rule__Ref__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getRefAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ref__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ref__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getGroup_8()); }
(rule__Ref__Group_8__0)?
{ after(grammarAccess.getRefAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Ref__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ref__Group_8__0__Impl
	rule__Ref__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getOppositeOfKeyword_8_0()); }

	'oppositeOf' 

{ after(grammarAccess.getRefAccess().getOppositeOfKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ref__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ref__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getOppositeAssignment_8_1()); }
(rule__Ref__OppositeAssignment_8_1)
{ after(grammarAccess.getRefAccess().getOppositeAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Op__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group__0__Impl
	rule__Op__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getOpKeyword_0()); }

	'op' 

{ after(grammarAccess.getOpAccess().getOpKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Op__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group__1__Impl
	rule__Op__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getNameAssignment_1()); }
(rule__Op__NameAssignment_1)
{ after(grammarAccess.getOpAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Op__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group__2__Impl
	rule__Op__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getOpAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Op__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group__3__Impl
	rule__Op__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getGroup_3()); }
(rule__Op__Group_3__0)?
{ after(grammarAccess.getOpAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Op__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getOpAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Op__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_3__0__Impl
	rule__Op__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getParameterAssignment_3_0()); }
(rule__Op__ParameterAssignment_3_0)
{ after(grammarAccess.getOpAccess().getParameterAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Op__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getGroup_3_1()); }
(rule__Op__Group_3_1__0)*
{ after(grammarAccess.getOpAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Op__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_3_1__0__Impl
	rule__Op__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getOpAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Op__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getParameterAssignment_3_1_1()); }
(rule__Op__ParameterAssignment_3_1_1)
{ after(grammarAccess.getOpAccess().getParameterAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Param__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__0__Impl
	rule__Param__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getDataTypeAssignment_0()); }
(rule__Param__DataTypeAssignment_0)
{ after(grammarAccess.getParamAccess().getDataTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__1__Impl
	rule__Param__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getClassTypeAssignment_1()); }
(rule__Param__ClassTypeAssignment_1)
{ after(grammarAccess.getParamAccess().getClassTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getNameAssignment_2()); }
(rule__Param__NameAssignment_2)
{ after(grammarAccess.getParamAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StMach__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StMach__Group__0__Impl
	rule__StMach__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StMach__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStMachAccess().getStateMachineKeyword_0()); }

	'stateMachine' 

{ after(grammarAccess.getStMachAccess().getStateMachineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StMach__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StMach__Group__1__Impl
	rule__StMach__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StMach__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStMachAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getStMachAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StMach__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StMach__Group__2__Impl
	rule__StMach__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StMach__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStMachAccess().getStatesAssignment_2()); }
(rule__StMach__StatesAssignment_2)
{ after(grammarAccess.getStMachAccess().getStatesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StMach__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StMach__Group__3__Impl
	rule__StMach__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StMach__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStMachAccess().getStatesAssignment_3()); }
(rule__StMach__StatesAssignment_3)*
{ after(grammarAccess.getStMachAccess().getStatesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StMach__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StMach__Group__4__Impl
	rule__StMach__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StMach__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStMachAccess().getHyphenMinusGreaterThanSignKeyword_4()); }

	'->' 

{ after(grammarAccess.getStMachAccess().getHyphenMinusGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StMach__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StMach__Group__5__Impl
	rule__StMach__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StMach__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStMachAccess().getInitialStateAssignment_5()); }
(rule__StMach__InitialStateAssignment_5)
{ after(grammarAccess.getStMachAccess().getInitialStateAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StMach__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StMach__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StMach__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStMachAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getStMachAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Ste__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ste__Group__0__Impl
	rule__Ste__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ste__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSteAccess().getStateKeyword_0()); }

	'state' 

{ after(grammarAccess.getSteAccess().getStateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ste__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ste__Group__1__Impl
	rule__Ste__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ste__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSteAccess().getNameAssignment_1()); }
(rule__Ste__NameAssignment_1)
{ after(grammarAccess.getSteAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ste__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ste__Group__2__Impl
	rule__Ste__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ste__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSteAccess().getGroup_2()); }
(rule__Ste__Group_2__0)?
{ after(grammarAccess.getSteAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ste__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ste__Group__3__Impl
	rule__Ste__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ste__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSteAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getSteAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ste__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ste__Group__4__Impl
	rule__Ste__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Ste__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSteAccess().getGroup_4()); }
(rule__Ste__Group_4__0)?
{ after(grammarAccess.getSteAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ste__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ste__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ste__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSteAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getSteAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Ste__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ste__Group_2__0__Impl
	rule__Ste__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ste__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSteAccess().getOnEntryCallKeyword_2_0()); }

	'onEntryCall' 

{ after(grammarAccess.getSteAccess().getOnEntryCallKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ste__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ste__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ste__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSteAccess().getEntryOperationAssignment_2_1()); }
(rule__Ste__EntryOperationAssignment_2_1)
{ after(grammarAccess.getSteAccess().getEntryOperationAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ste__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ste__Group_4__0__Impl
	rule__Ste__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ste__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSteAccess().getTransitionsAssignment_4_0()); }
(rule__Ste__TransitionsAssignment_4_0)
{ after(grammarAccess.getSteAccess().getTransitionsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ste__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ste__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ste__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSteAccess().getTransitionsAssignment_4_1()); }
(rule__Ste__TransitionsAssignment_4_1)*
{ after(grammarAccess.getSteAccess().getTransitionsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Trans__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trans__Group__0__Impl
	rule__Trans__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trans__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransAccess().getEventAssignment_0()); }
(rule__Trans__EventAssignment_0)
{ after(grammarAccess.getTransAccess().getEventAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trans__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trans__Group__1__Impl
	rule__Trans__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trans__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	'=>' 

{ after(grammarAccess.getTransAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trans__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trans__Group__2__Impl
	rule__Trans__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Trans__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransAccess().getTargetAssignment_2()); }
(rule__Trans__TargetAssignment_2)
{ after(grammarAccess.getTransAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trans__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trans__Group__3__Impl
	rule__Trans__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Trans__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransAccess().getGroup_3()); }
(rule__Trans__Group_3__0)?
{ after(grammarAccess.getTransAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trans__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trans__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trans__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransAccess().getGroup_4()); }
(rule__Trans__Group_4__0)?
{ after(grammarAccess.getTransAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Trans__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trans__Group_3__0__Impl
	rule__Trans__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trans__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransAccess().getUnlessKeyword_3_0()); }

	'unless' 

{ after(grammarAccess.getTransAccess().getUnlessKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trans__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trans__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trans__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransAccess().getGuardAssignment_3_1()); }
(rule__Trans__GuardAssignment_3_1)
{ after(grammarAccess.getTransAccess().getGuardAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Trans__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trans__Group_4__0__Impl
	rule__Trans__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trans__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransAccess().getLeftCurlyBracketKeyword_4_0()); }

	'{' 

{ after(grammarAccess.getTransAccess().getLeftCurlyBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trans__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trans__Group_4__1__Impl
	rule__Trans__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trans__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransAccess().getActionsAssignment_4_1()); }
(rule__Trans__ActionsAssignment_4_1)
{ after(grammarAccess.getTransAccess().getActionsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trans__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trans__Group_4__2__Impl
	rule__Trans__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Trans__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransAccess().getActionsAssignment_4_2()); }
(rule__Trans__ActionsAssignment_4_2)*
{ after(grammarAccess.getTransAccess().getActionsAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trans__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trans__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trans__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransAccess().getRightCurlyBracketKeyword_4_3()); }

	'}' 

{ after(grammarAccess.getTransAccess().getRightCurlyBracketKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CRefOpAct__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRefOpAct__Group__0__Impl
	rule__CRefOpAct__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getSelfKeyword_0()); }

	'self' 

{ after(grammarAccess.getCRefOpActAccess().getSelfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRefOpAct__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRefOpAct__Group__1__Impl
	rule__CRefOpAct__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getHyphenMinusGreaterThanSignKeyword_1()); }

	'->' 

{ after(grammarAccess.getCRefOpActAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRefOpAct__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRefOpAct__Group__2__Impl
	rule__CRefOpAct__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getCallObjectViaReferenceAssignment_2()); }
(rule__CRefOpAct__CallObjectViaReferenceAssignment_2)
{ after(grammarAccess.getCRefOpActAccess().getCallObjectViaReferenceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRefOpAct__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRefOpAct__Group__3__Impl
	rule__CRefOpAct__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getHyphenMinusGreaterThanSignKeyword_3()); }

	'->' 

{ after(grammarAccess.getCRefOpActAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRefOpAct__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRefOpAct__Group__4__Impl
	rule__CRefOpAct__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getCalledOperationAssignment_4()); }
(rule__CRefOpAct__CalledOperationAssignment_4)
{ after(grammarAccess.getCRefOpActAccess().getCalledOperationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRefOpAct__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRefOpAct__Group__5__Impl
	rule__CRefOpAct__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getGroup_5()); }
(rule__CRefOpAct__Group_5__0)?
{ after(grammarAccess.getCRefOpActAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRefOpAct__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRefOpAct__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getCRefOpActAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__CRefOpAct__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRefOpAct__Group_5__0__Impl
	rule__CRefOpAct__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getLeftParenthesisKeyword_5_0()); }

	'(' 

{ after(grammarAccess.getCRefOpActAccess().getLeftParenthesisKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRefOpAct__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRefOpAct__Group_5__1__Impl
	rule__CRefOpAct__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getParameterAssignment_5_1()); }
(rule__CRefOpAct__ParameterAssignment_5_1)
{ after(grammarAccess.getCRefOpActAccess().getParameterAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRefOpAct__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRefOpAct__Group_5__2__Impl
	rule__CRefOpAct__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getGroup_5_2()); }
(rule__CRefOpAct__Group_5_2__0)*
{ after(grammarAccess.getCRefOpActAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRefOpAct__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRefOpAct__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getRightParenthesisKeyword_5_3()); }

	')' 

{ after(grammarAccess.getCRefOpActAccess().getRightParenthesisKeyword_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CRefOpAct__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRefOpAct__Group_5_2__0__Impl
	rule__CRefOpAct__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getCommaKeyword_5_2_0()); }

	',' 

{ after(grammarAccess.getCRefOpActAccess().getCommaKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRefOpAct__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRefOpAct__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getParameterAssignment_5_2_1()); }
(rule__CRefOpAct__ParameterAssignment_5_2_1)
{ after(grammarAccess.getCRefOpActAccess().getParameterAssignment_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CParamOpAct__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CParamOpAct__Group__0__Impl
	rule__CParamOpAct__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CParamOpAct__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCParamOpActAccess().getCallObjectViaParameterAssignment_0()); }
(rule__CParamOpAct__CallObjectViaParameterAssignment_0)
{ after(grammarAccess.getCParamOpActAccess().getCallObjectViaParameterAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CParamOpAct__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CParamOpAct__Group__1__Impl
	rule__CParamOpAct__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CParamOpAct__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCParamOpActAccess().getHyphenMinusGreaterThanSignKeyword_1()); }

	'->' 

{ after(grammarAccess.getCParamOpActAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CParamOpAct__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CParamOpAct__Group__2__Impl
	rule__CParamOpAct__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CParamOpAct__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCParamOpActAccess().getCalledOperationAssignment_2()); }
(rule__CParamOpAct__CalledOperationAssignment_2)
{ after(grammarAccess.getCParamOpActAccess().getCalledOperationAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CParamOpAct__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CParamOpAct__Group__3__Impl
	rule__CParamOpAct__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CParamOpAct__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCParamOpActAccess().getGroup_3()); }
(rule__CParamOpAct__Group_3__0)?
{ after(grammarAccess.getCParamOpActAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CParamOpAct__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CParamOpAct__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CParamOpAct__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCParamOpActAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getCParamOpActAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CParamOpAct__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CParamOpAct__Group_3__0__Impl
	rule__CParamOpAct__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CParamOpAct__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCParamOpActAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getCParamOpActAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CParamOpAct__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CParamOpAct__Group_3__1__Impl
	rule__CParamOpAct__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CParamOpAct__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCParamOpActAccess().getParameterAssignment_3_1()); }
(rule__CParamOpAct__ParameterAssignment_3_1)
{ after(grammarAccess.getCParamOpActAccess().getParameterAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CParamOpAct__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CParamOpAct__Group_3__2__Impl
	rule__CParamOpAct__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CParamOpAct__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCParamOpActAccess().getGroup_3_2()); }
(rule__CParamOpAct__Group_3_2__0)*
{ after(grammarAccess.getCParamOpActAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CParamOpAct__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CParamOpAct__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CParamOpAct__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCParamOpActAccess().getRightParenthesisKeyword_3_3()); }

	')' 

{ after(grammarAccess.getCParamOpActAccess().getRightParenthesisKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CParamOpAct__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CParamOpAct__Group_3_2__0__Impl
	rule__CParamOpAct__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CParamOpAct__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCParamOpActAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getCParamOpActAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CParamOpAct__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CParamOpAct__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CParamOpAct__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCParamOpActAccess().getParameterAssignment_3_2_1()); }
(rule__CParamOpAct__ParameterAssignment_3_2_1)
{ after(grammarAccess.getCParamOpActAccess().getParameterAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RefAssAct__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefAssAct__Group__0__Impl
	rule__RefAssAct__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefAssAct__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAssActAccess().getSelfKeyword_0()); }

	'self' 

{ after(grammarAccess.getRefAssActAccess().getSelfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefAssAct__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefAssAct__Group__1__Impl
	rule__RefAssAct__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefAssAct__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAssActAccess().getHyphenMinusGreaterThanSignKeyword_1()); }

	'->' 

{ after(grammarAccess.getRefAssActAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefAssAct__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefAssAct__Group__2__Impl
	rule__RefAssAct__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RefAssAct__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAssActAccess().getReferenceAssignment_2()); }
(rule__RefAssAct__ReferenceAssignment_2)
{ after(grammarAccess.getRefAssActAccess().getReferenceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefAssAct__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefAssAct__Group__3__Impl
	rule__RefAssAct__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RefAssAct__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAssActAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getRefAssActAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefAssAct__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefAssAct__Group__4__Impl
	rule__RefAssAct__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RefAssAct__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAssActAccess().getParameterAssignment_4()); }
(rule__RefAssAct__ParameterAssignment_4)
{ after(grammarAccess.getRefAssActAccess().getParameterAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefAssAct__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefAssAct__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefAssAct__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAssActAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getRefAssActAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ParamBind__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamBind__Group__0__Impl
	rule__ParamBind__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamBind__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamBindAccess().getParameterBindingAssignment_0()); }
(rule__ParamBind__ParameterBindingAssignment_0)
{ after(grammarAccess.getParamBindAccess().getParameterBindingAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamBind__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamBind__Group__1__Impl
	rule__ParamBind__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamBind__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamBindAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getParamBindAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamBind__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamBind__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamBind__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamBindAccess().getAlternatives_2()); }
(rule__ParamBind__Alternatives_2)
{ after(grammarAccess.getParamBindAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RefInStateCond__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefInStateCond__Group__0__Impl
	rule__RefInStateCond__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefInStateCond__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefInStateCondAccess().getSelfKeyword_0()); }

	'self' 

{ after(grammarAccess.getRefInStateCondAccess().getSelfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefInStateCond__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefInStateCond__Group__1__Impl
	rule__RefInStateCond__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefInStateCond__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefInStateCondAccess().getHyphenMinusGreaterThanSignKeyword_1()); }

	'->' 

{ after(grammarAccess.getRefInStateCondAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefInStateCond__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefInStateCond__Group__2__Impl
	rule__RefInStateCond__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RefInStateCond__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefInStateCondAccess().getReferenceAssignment_2()); }
(rule__RefInStateCond__ReferenceAssignment_2)
{ after(grammarAccess.getRefInStateCondAccess().getReferenceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefInStateCond__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefInStateCond__Group__3__Impl
	rule__RefInStateCond__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RefInStateCond__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefInStateCondAccess().getInStateKeyword_3()); }

	'inState' 

{ after(grammarAccess.getRefInStateCondAccess().getInStateKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefInStateCond__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefInStateCond__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefInStateCond__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefInStateCondAccess().getInStateAssignment_4()); }
(rule__RefInStateCond__InStateAssignment_4)
{ after(grammarAccess.getRefInStateCondAccess().getInStateAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ParamInStateCond__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamInStateCond__Group__0__Impl
	rule__ParamInStateCond__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamInStateCond__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamInStateCondAccess().getParameterAssignment_0()); }
(rule__ParamInStateCond__ParameterAssignment_0)
{ after(grammarAccess.getParamInStateCondAccess().getParameterAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamInStateCond__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamInStateCond__Group__1__Impl
	rule__ParamInStateCond__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamInStateCond__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamInStateCondAccess().getInStateKeyword_1()); }

	'inState' 

{ after(grammarAccess.getParamInStateCondAccess().getInStateKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamInStateCond__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamInStateCond__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamInStateCond__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamInStateCondAccess().getInStateAssignment_2()); }
(rule__ParamInStateCond__InStateAssignment_2)
{ after(grammarAccess.getParamInStateCondAccess().getInStateAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Pkg__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPkgAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getPkgAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pkg__ClassesAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPkgAccess().getClassesClsParserRuleCall_3_0_0()); }
	ruleCls{ after(grammarAccess.getPkgAccess().getClassesClsParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pkg__ClassesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPkgAccess().getClassesClsParserRuleCall_3_1_0()); }
	ruleCls{ after(grammarAccess.getPkgAccess().getClassesClsParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pkg__PackagesAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPkgAccess().getPackagesPkgParserRuleCall_4_0_0()); }
	rulePkg{ after(grammarAccess.getPkgAccess().getPackagesPkgParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pkg__PackagesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPkgAccess().getPackagesPkgParserRuleCall_4_1_0()); }
	rulePkg{ after(grammarAccess.getPkgAccess().getPackagesPkgParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getClsAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__FeaturesAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getFeaturesStructFeatParserRuleCall_3_0_0()); }
	ruleStructFeat{ after(grammarAccess.getClsAccess().getFeaturesStructFeatParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__FeaturesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getFeaturesStructFeatParserRuleCall_3_1_0()); }
	ruleStructFeat{ after(grammarAccess.getClsAccess().getFeaturesStructFeatParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__OperationsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getOperationsOpParserRuleCall_4_0_0()); }
	ruleOp{ after(grammarAccess.getClsAccess().getOperationsOpParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__OperationsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getOperationsOpParserRuleCall_4_1_0()); }
	ruleOp{ after(grammarAccess.getClsAccess().getOperationsOpParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cls__StateMachineAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClsAccess().getStateMachineStMachParserRuleCall_5_0()); }
	ruleStMach{ after(grammarAccess.getClsAccess().getStateMachineStMachParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__DataTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getDataTypeDTypeEnumRuleCall_1_0()); }
	ruledType{ after(grammarAccess.getAttrAccess().getDataTypeDTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getAttrAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__LowerBoundAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getLowerBoundEIntParserRuleCall_3_1_0()); }
	ruleEInt{ after(grammarAccess.getAttrAccess().getLowerBoundEIntParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__UpperBoundAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getUpperBoundEIntParserRuleCall_3_3_0()); }
	ruleEInt{ after(grammarAccess.getAttrAccess().getUpperBoundEIntParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getTypeClassCrossReference_1_0()); }
(
{ before(grammarAccess.getRefAccess().getTypeClassIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRefAccess().getTypeClassIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRefAccess().getTypeClassCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getRefAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__LowerBoundAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getLowerBoundEIntParserRuleCall_4_0()); }
	ruleEInt{ after(grammarAccess.getRefAccess().getLowerBoundEIntParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__UpperBoundAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getUpperBoundEIntParserRuleCall_6_0()); }
	ruleEInt{ after(grammarAccess.getRefAccess().getUpperBoundEIntParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__OppositeAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getOppositeReferenceCrossReference_8_1_0()); }
(
{ before(grammarAccess.getRefAccess().getOppositeReferenceIDTerminalRuleCall_8_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRefAccess().getOppositeReferenceIDTerminalRuleCall_8_1_0_1()); }
)
{ after(grammarAccess.getRefAccess().getOppositeReferenceCrossReference_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Op__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getOpAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Op__ParameterAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getParameterParamParserRuleCall_3_0_0()); }
	ruleParam{ after(grammarAccess.getOpAccess().getParameterParamParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Op__ParameterAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getParameterParamParserRuleCall_3_1_1_0()); }
	ruleParam{ after(grammarAccess.getOpAccess().getParameterParamParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__DataTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getDataTypeDTypeEnumRuleCall_0_0()); }
	ruledType{ after(grammarAccess.getParamAccess().getDataTypeDTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__ClassTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getClassTypeClassCrossReference_1_0()); }
(
{ before(grammarAccess.getParamAccess().getClassTypeClassIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getParamAccess().getClassTypeClassIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getParamAccess().getClassTypeClassCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getParamAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StMach__StatesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStMachAccess().getStatesSteParserRuleCall_2_0()); }
	ruleSte{ after(grammarAccess.getStMachAccess().getStatesSteParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StMach__StatesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStMachAccess().getStatesSteParserRuleCall_3_0()); }
	ruleSte{ after(grammarAccess.getStMachAccess().getStatesSteParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StMach__InitialStateAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStMachAccess().getInitialStateStateCrossReference_5_0()); }
(
{ before(grammarAccess.getStMachAccess().getInitialStateStateIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getStMachAccess().getInitialStateStateIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getStMachAccess().getInitialStateStateCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ste__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSteAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getSteAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ste__EntryOperationAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSteAccess().getEntryOperationEntOpParserRuleCall_2_1_0()); }
	ruleEntOp{ after(grammarAccess.getSteAccess().getEntryOperationEntOpParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ste__TransitionsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSteAccess().getTransitionsTransParserRuleCall_4_0_0()); }
	ruleTrans{ after(grammarAccess.getSteAccess().getTransitionsTransParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ste__TransitionsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSteAccess().getTransitionsTransParserRuleCall_4_1_0()); }
	ruleTrans{ after(grammarAccess.getSteAccess().getTransitionsTransParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntOp__CalledOperationAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntOpAccess().getCalledOperationOperationCrossReference_0()); }
(
{ before(grammarAccess.getEntOpAccess().getCalledOperationOperationIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getEntOpAccess().getCalledOperationOperationIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getEntOpAccess().getCalledOperationOperationCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trans__EventAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransAccess().getEventEvParserRuleCall_0_0()); }
	ruleEv{ after(grammarAccess.getTransAccess().getEventEvParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trans__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransAccess().getTargetStateCrossReference_2_0()); }
(
{ before(grammarAccess.getTransAccess().getTargetStateIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTransAccess().getTargetStateIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTransAccess().getTargetStateCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trans__GuardAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransAccess().getGuardGuadParserRuleCall_3_1_0()); }
	ruleGuad{ after(grammarAccess.getTransAccess().getGuardGuadParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trans__ActionsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransAccess().getActionsActParserRuleCall_4_1_0()); }
	ruleAct{ after(grammarAccess.getTransAccess().getActionsActParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trans__ActionsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransAccess().getActionsActParserRuleCall_4_2_0()); }
	ruleAct{ after(grammarAccess.getTransAccess().getActionsActParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ev__OperationAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvAccess().getOperationOperationCrossReference_0()); }
(
{ before(grammarAccess.getEvAccess().getOperationOperationIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getEvAccess().getOperationOperationIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getEvAccess().getOperationOperationCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__CallObjectViaReferenceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getCallObjectViaReferenceReferenceCrossReference_2_0()); }
(
{ before(grammarAccess.getCRefOpActAccess().getCallObjectViaReferenceReferenceIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getCRefOpActAccess().getCallObjectViaReferenceReferenceIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getCRefOpActAccess().getCallObjectViaReferenceReferenceCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__CalledOperationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getCalledOperationOperationCrossReference_4_0()); }
(
{ before(grammarAccess.getCRefOpActAccess().getCalledOperationOperationIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getCRefOpActAccess().getCalledOperationOperationIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getCRefOpActAccess().getCalledOperationOperationCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__ParameterAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getParameterParamBindParserRuleCall_5_1_0()); }
	ruleParamBind{ after(grammarAccess.getCRefOpActAccess().getParameterParamBindParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CRefOpAct__ParameterAssignment_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRefOpActAccess().getParameterParamBindParserRuleCall_5_2_1_0()); }
	ruleParamBind{ after(grammarAccess.getCRefOpActAccess().getParameterParamBindParserRuleCall_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CParamOpAct__CallObjectViaParameterAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCParamOpActAccess().getCallObjectViaParameterParameterCrossReference_0_0()); }
(
{ before(grammarAccess.getCParamOpActAccess().getCallObjectViaParameterParameterIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getCParamOpActAccess().getCallObjectViaParameterParameterIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getCParamOpActAccess().getCallObjectViaParameterParameterCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CParamOpAct__CalledOperationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCParamOpActAccess().getCalledOperationOperationCrossReference_2_0()); }
(
{ before(grammarAccess.getCParamOpActAccess().getCalledOperationOperationIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getCParamOpActAccess().getCalledOperationOperationIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getCParamOpActAccess().getCalledOperationOperationCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CParamOpAct__ParameterAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCParamOpActAccess().getParameterParamBindParserRuleCall_3_1_0()); }
	ruleParamBind{ after(grammarAccess.getCParamOpActAccess().getParameterParamBindParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CParamOpAct__ParameterAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCParamOpActAccess().getParameterParamBindParserRuleCall_3_2_1_0()); }
	ruleParamBind{ after(grammarAccess.getCParamOpActAccess().getParameterParamBindParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefAssAct__ReferenceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAssActAccess().getReferenceReferenceCrossReference_2_0()); }
(
{ before(grammarAccess.getRefAssActAccess().getReferenceReferenceIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRefAssActAccess().getReferenceReferenceIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRefAssActAccess().getReferenceReferenceCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefAssAct__ParameterAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAssActAccess().getParameterParameterCrossReference_4_0()); }
(
{ before(grammarAccess.getRefAssActAccess().getParameterParameterIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getRefAssActAccess().getParameterParameterIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getRefAssActAccess().getParameterParameterCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamBind__ParameterBindingAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamBindAccess().getParameterBindingParameterCrossReference_0_0()); }
(
{ before(grammarAccess.getParamBindAccess().getParameterBindingParameterIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getParamBindAccess().getParameterBindingParameterIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getParamBindAccess().getParameterBindingParameterCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamBind__StructuralFeatureBindingAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamBindAccess().getStructuralFeatureBindingStructuralFeatureCrossReference_2_0_0()); }
(
{ before(grammarAccess.getParamBindAccess().getStructuralFeatureBindingStructuralFeatureIDTerminalRuleCall_2_0_0_1()); }
	RULE_ID{ after(grammarAccess.getParamBindAccess().getStructuralFeatureBindingStructuralFeatureIDTerminalRuleCall_2_0_0_1()); }
)
{ after(grammarAccess.getParamBindAccess().getStructuralFeatureBindingStructuralFeatureCrossReference_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefInStateCond__ReferenceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefInStateCondAccess().getReferenceReferenceCrossReference_2_0()); }
(
{ before(grammarAccess.getRefInStateCondAccess().getReferenceReferenceIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRefInStateCondAccess().getReferenceReferenceIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRefInStateCondAccess().getReferenceReferenceCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefInStateCond__InStateAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefInStateCondAccess().getInStateStateCrossReference_4_0()); }
(
{ before(grammarAccess.getRefInStateCondAccess().getInStateStateIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getRefInStateCondAccess().getInStateStateIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getRefInStateCondAccess().getInStateStateCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamInStateCond__ParameterAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamInStateCondAccess().getParameterParameterCrossReference_0_0()); }
(
{ before(grammarAccess.getParamInStateCondAccess().getParameterParameterIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getParamInStateCondAccess().getParameterParameterIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getParamInStateCondAccess().getParameterParameterCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamInStateCond__InStateAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamInStateCondAccess().getInStateStateCrossReference_2_0()); }
(
{ before(grammarAccess.getParamInStateCondAccess().getInStateStateIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getParamInStateCondAccess().getInStateStateIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getParamInStateCondAccess().getInStateStateCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


